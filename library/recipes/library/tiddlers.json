[
    {
        "title": "$:/plugins/mklauber/SoundPad",
        "description": "SoundPad",
        "author": "Matthew Lauber",
        "version": "1.0.0",
        "core-version": ">=5.0.1",
        "plugin-type": "plugin",
        "list": "",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/SoundPad-Sounds",
        "description": "Sounds for mklauber's SoundPad",
        "author": "Matthew Lauber",
        "version": "1.0.0",
        "core-version": ">=5.0.1",
        "plugin-type": "plugin",
        "list": "",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/aliases",
        "description": "Aliases - Alias Manager",
        "author": "Matthew Lauber",
        "version": "1.0.0",
        "core-version": ">=5.0.1",
        "plugin-type": "plugin",
        "list": "",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/math.js",
        "description": "Add a calc widget that evluates expression using Math.JS",
        "author": "Matthew Lauber",
        "version": "1.1.2",
        "core-version": ">=5.0.0",
        "plugin-type": "plugin",
        "list": "",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/substory",
        "description": "Sane Substory Implementation",
        "author": "Matthew Lauber",
        "version": "2.0.1",
        "core-version": ">=5.0.0",
        "plugin-type": "plugin",
        "list": "readme",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/dropaction",
        "description": "DropAction Widget",
        "author": "Matthew Lauber",
        "version": "1.1.2",
        "core-version": ">=5.0.0",
        "plugin-type": "plugin",
        "list": "Readme",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/field-editor",
        "description": "Field Editor",
        "author": "Matthew Lauber",
        "version": "1.1.3",
        "core-version": ">=5.0.0",
        "plugin-type": "plugin",
        "list": "Readme",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/preferences",
        "description": "mklauber's personal Tweaks",
        "author": "Matthew Lauber",
        "version": "1.1.2",
        "core-version": ">=5.0.0",
        "plugin-type": "plugin",
        "list": "",
        "dependents": "",
        "type": "application/json"
    },
    {
        "title": "$:/plugins/mklauber/shuffle",
        "description": "A Shuffle filter operator",
        "author": "Matthew Lauber",
        "version": "1.0.2",
        "core-version": ">=5.0.0",
        "plugin-type": "plugin",
        "list": "readme",
        "dependents": "",
        "type": "application/json",
        "readme": "|!purpose|Randomize the order of the input list|\n|!input|a selection of titles|\n|!parameter|a random string to be used to create consistent random ordering|\n|!output|The input titles, rearranged in a random order|\n\nThis plugin implements a new filter operator called Shuffle.  This operator takes the input list and randomizes the order of the list.  If no parameter is provided, the list order is random every time.\n\n!!!Example:\n```\n<$list filter=\"1 2 3 4 5 +[shuffle[]]\">\n\n</$list>\n```\n\n<$button popup=\"$:/state/shuffle/reveal1\">Run Demo</$button>\n\n<$reveal type=\"popup\" state=\"$:/state/shuffle/reveal1\">\n<div class=\"tc-drop-down\">\n<$list filter=\"1 2 3 4 5 +[shuffle[]]\">\n\n</$list>\n</div>\n</$reveal>\n\nCombining this operator with the first operator allows you to choose 1 or more titles randomly from a list.\n\n!!!Example:\n```\n<$list filter=\"1 2 3 4 5 +[shuffle[]first[2]]\">\n\n</$list>\n```\n\n<$button popup=\"$:/state/shuffle/reveal2\">Run Demo</$button>\n\n<$reveal type=\"popup\" state=\"$:/state/shuffle/reveal2\">\n<div class=\"tc-drop-down\">\n<$list filter=\"1 2 3 4 5 +[shuffle[]first[2]]\">\n\n</$list>\n</div>\n</$reveal>\n\nIf a parameter is provided the list will be ordered identically every time it is rendered.  This can be useful in conjunction a button that updates a state tiddler.  Set the parameter of this operator to reference that state tiddler, and create a button that updates that tiddler, and now the ordering of the random operators only changes when the button is pressed.\n\n!!!Example:\n```\n<$button>\n<$action-setfield $tiddler=\"$:/temp/shuffle/example\" $field=\"state\" $value=<<now \"0hh:0mm:0ss\">>/>\nChange Order\n</$button>\n\n<$list filter=\"1 2 3 4 5 +[shuffle{$:/temp/shuffle/example!!state}]\">\n\n</$list>\n```\n\n<$button>\n<$action-setfield $tiddler=\"$:/temp/shuffle/example\" $field=\"state\" $value=<<now \"0hh:0mm:0ss\">>/>\nUpdate\n</$button>\n\n<$list filter=\"1 2 3 4 5 +[shuffle{$:/temp/shuffle/example!!state}]\">\n\n</$list>\n"
    }
]